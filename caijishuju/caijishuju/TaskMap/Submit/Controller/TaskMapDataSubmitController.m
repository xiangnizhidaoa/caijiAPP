//
//  TaskMapDataSubmitController.m
//  caijishuju
//
//  Created by üç≠M on 2020/8/28.
//  Copyright ¬© 2020 ÁâõÊñπË∑Ø. All rights reserved.
//

#import "TaskMapDataSubmitController.h"
#import "MyTaskDetailsThrCell.h"
#import "MyTaskDetailsHeadCell.h"
#import "MyTaskDetailsFouCell.h"
#import "MyTaskDetailsFootCell.h"

#import "MViewToast.h"
#import "MyTaskDetailsFivCell.h"
#import "CarTaskManagePhotoDetailsController.h"

@interface TaskMapDataSubmitController ()<UITableViewDelegate,UITableViewDataSource,UINavigationControllerDelegate,UIImagePickerControllerDelegate,CLLocationManagerDelegate,CTMPhotoDetailsDelegate,TencentLBSLocationManagerDelegate>

@property (weak, nonatomic) IBOutlet UITableView *tabV;

/** Êï∞ÊçÆ */
@property (nonatomic, strong) NSMutableArray *dataArr;

/** ÂΩìÂâç‰ΩçÁΩÆ */
@property (nonatomic, assign) CLLocationCoordinate2D nowClCoor2d;

/** Âè∂Â≠êÂõæÁâá */
@property (nonatomic, strong) UIImage *yeziImg;
/** Ê§çÊ†™ÂõæÁâá */
@property (nonatomic, strong) UIImage *zhizhuImg;
/** Âú∞Âùó */
@property (nonatomic, strong) UIImage *dikuaiImg;
/** ÂÆö‰ΩçÁÆ°ÁêÜÂô® */
@property (nonatomic, strong) CLLocationManager *clManager;
/** Âú∞‰ΩçÊùÉÈôêÊèêÁ§∫Ê°Ü */
@property (nonatomic, strong) UIAlertController *clAc;

/** ÂõæÁâá‰∏ãË°® */
@property (nonatomic, assign) NSInteger imgSelect;
/*** ÁúÅ ***/
@property (nonatomic, copy) NSString *provinceStr;
/*** Â∏Ç ***/
@property (nonatomic, copy) NSString *cityStr;
/*** Âå∫ ***/
@property (nonatomic, copy) NSString *districtStr;

@property (nonatomic, strong) NSString *yepianID;

@property (nonatomic, strong) NSString *zhizhuID;

@property (nonatomic, strong) NSString *dikuaiID;
/** ÊúùÂêë */
@property (nonatomic, strong) NSString *chaoxiang;
/** ËÖæËÆØÂÆö‰Ωç */
@property (nonatomic, strong) TencentLBSLocationManager *locationManager;

@property (nonatomic, strong) NSString *GUID;


@end

@implementation TaskMapDataSubmitController

- (NSMutableArray *)dataArr {
    if (!_dataArr) {
        self.dataArr = [@[
            @{
                @"type":@"1",
                @"title":@"",
                @"text":@""
            },
            [@{
                @"type":@"2",
                @"title":@"‰ΩúÁâ©ÂêçÁß∞",
                @"count":[NSNumber numberWithInteger:200],
                @"holder":@"‰ΩúÁâ©ÂêçÁß∞(Ëá™Âä®ËØÜÂà´)",
                @"text":@""
            } mutableCopy],
            [@{
                @"type":@"3",
                @"title":@"Âè∂Â≠êÁÖßÁâá",
                @"text":@""
            } mutableCopy],
            [@{
                @"type":@"3",
                @"title":@"Ê§çÊ†™ÁÖßÁâá",
                @"text":@""
            } mutableCopy] ,
            [@{
                @"type":@"3",
                @"title":@"Âú∞ÂùóÁÖßÁâá",
                @"text":@""
            } mutableCopy],
            [@{
                @"type":@"5",
                @"title":@"Â§áÊ≥®",
                @"count":[NSNumber numberWithInteger:200],
                @"holder":@"Â§áÊ≥®(200Â≠ó)",
                @"text":@""
            } mutableCopy],
            @{
                @"type":@"4",
                @"title":@"",
                @"text":@""
            },
        ] mutableCopy];
    }
    return _dataArr;
}

- (void)viewDidLoad {
    [super viewDidLoad];
    self.navigationItem.title = @"Êï∞ÊçÆÂ°´Êä•";
    
    if (@available(iOS 11.0, *)) {
        self.tabV.contentInsetAdjustmentBehavior = UIScrollViewContentInsetAdjustmentNever;
        self.tabV.contentInset = UIEdgeInsetsMake(0, 0, 0, 0);
        self.tabV.scrollIndicatorInsets = self.tabV.contentInset;
    }else {
        self.automaticallyAdjustsScrollViewInsets = NO;
    }
    self.tabV.rowHeight = UITableViewAutomaticDimension;
    self.tabV.estimatedRowHeight = 30;

    [self.tabV registerNib:[UINib nibWithNibName:@"MyTaskDetailsThrCell" bundle:[NSBundle mainBundle]] forCellReuseIdentifier:@"MyTaskDetailsThrCell"];
    [self.tabV registerNib:[UINib nibWithNibName:@"MyTaskDetailsHeadCell" bundle:[NSBundle mainBundle]] forCellReuseIdentifier:@"MyTaskDetailsHeadCell"];
    [self.tabV registerNib:[UINib nibWithNibName:@"MyTaskDetailsFouCell" bundle:[NSBundle mainBundle]] forCellReuseIdentifier:@"MyTaskDetailsFouCell"];
    [self.tabV registerNib:[UINib nibWithNibName:@"MyTaskDetailsFootCell" bundle:[NSBundle mainBundle]] forCellReuseIdentifier:@"MyTaskDetailsFootCell"];
    [self.tabV registerNib:[UINib nibWithNibName:@"MyTaskDetailsFivCell" bundle:[NSBundle mainBundle]] forCellReuseIdentifier:@"MyTaskDetailsFivCell"];
    
    [self HPSILocationJurisdiction];
    self.GUID = [self getUniqueStrByUUID];
    
}

/** ‰øùÂ≠ò */
- (IBAction)TMDSSaveBtAction:(UIButton *)sender {
    [self.view endEditing:YES];
    if ([self TMDSVerifyBody]) {
        [self TMDSSubmitRequest];
    }
}

/** ÈááÈõÜÂú∞Âõæ */
- (IBAction)TMDSMapBtAction:(UIButton *)sender {
    [self.navigationController popViewControllerAnimated:YES];
}


#pragma mark ---- UItableView
/**
 ÂàÜÂå∫
 */
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    return 1;
}


/**
 Ë°åÊï∞
 */
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    return self.dataArr.count;
}

/**
 Â§¥ÈÉ®È´òÂ∫¶
 */
- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section {
    return 0.01;
}

/**
 Â∞æÈÉ®È´òÂ∫¶
 */
- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section {
    return 0.01;
}



/**
 cellËµãÂÄº
 */
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    NSString *typeStr = [[self.dataArr objectAtIndex:indexPath.row] objectForKey:@"type"];
    NSString *titleStr = [[self.dataArr objectAtIndex:indexPath.row] objectForKey:@"title"];
    NSString *detailStr = [[self.dataArr objectAtIndex:indexPath.row] objectForKey:@"text"];
    
    if ([typeStr isEqualToString:@"1"]) {
        MyTaskDetailsHeadCell *cellOne = [self.tabV dequeueReusableCellWithIdentifier:@"MyTaskDetailsHeadCell" forIndexPath:indexPath];
        return cellOne;
        
        
    } else if ([typeStr isEqualToString:@"2"]) {
        if (self.type == 0) {
            MyTaskDetailsFouCell *cellTwo = [self.tabV dequeueReusableCellWithIdentifier:@"MyTaskDetailsFouCell" forIndexPath:indexPath];
            cellTwo.wordCount = [[[self.dataArr objectAtIndex:indexPath.row] objectForKey:@"count"] integerValue];
            cellTwo.detailsTf.placeholder = [[self.dataArr objectAtIndex:indexPath.row] objectForKey:@"holder"];
            cellTwo.titleLb.text = titleStr;
            cellTwo.detailsTf.text = detailStr;
            cellTwo.finishBlock = ^(NSString * _Nonnull text) {
                [[self.dataArr objectAtIndex:indexPath.row] setObject:[self isNoBlankText:text] forKey:@"text"];
            };
            return cellTwo;
        }else{
            MyTaskDetailsFouCell *cellTwo = [self.tabV dequeueReusableCellWithIdentifier:@"MyTaskDetailsFouCell" forIndexPath:indexPath];
            cellTwo.wordCount = [[[self.dataArr objectAtIndex:indexPath.row] objectForKey:@"count"] integerValue];
            cellTwo.titleLb.text = titleStr;
            cellTwo.detailsTf.text = self.model.zuowumc;
            return cellTwo;
        }
    } else if ([typeStr isEqualToString:@"3"]) {
        if (self.type == 0) {
            MyTaskDetailsThrCell *cellThr = [self.tabV dequeueReusableCellWithIdentifier:@"MyTaskDetailsThrCell" forIndexPath:indexPath];
            cellThr.titleLb.text = titleStr;
            cellThr.selectBlock = ^{
                [self.view endEditing:YES];
                self.imgSelect = indexPath.row;
                if (self.zhizhuImg !=nil && indexPath.row == 3) {
                    [self TMDSSelectCellIndex:indexPath.row];
                }else if (self.yeziImg != nil && indexPath.row == 2){
                    [self TMDSSelectCellIndex:indexPath.row];
                }else if (self.dikuaiImg && indexPath.row == 4){
                    [self TMDSSelectCellIndex:indexPath.row];
                }else {
                    [self HPSICameraJurisdiction];
                }
//                445011
            };
            
            if (indexPath.row==2) {
                cellThr.detailsIv.image = self.yeziImg;
            } else if (indexPath.row==3) {
                cellThr.detailsIv.image = self.zhizhuImg;
            } else if (indexPath.row==4) {
                cellThr.detailsIv.image = self.dikuaiImg;
            }
            
            return cellThr;
        }else{
            MyTaskDetailsThrCell *cellThr = [self.tabV dequeueReusableCellWithIdentifier:@"MyTaskDetailsThrCell" forIndexPath:indexPath];
            cellThr.titleLb.text = titleStr;
            if (indexPath.row == 2) {
                [cellThr.detailsIv sd_setImageWithURL:[NSURL URLWithString:[NSString stringWithFormat:@"%@?type=s&id=%@",BS_Url.downImage,self.model.yepianzpid]] placeholderImage:[UIImage imageNamed:@"upload"]];
            }else if (indexPath.row == 3){
                [cellThr.detailsIv sd_setImageWithURL:[NSURL URLWithString:[NSString stringWithFormat:@"%@?type=s&id=%@",BS_Url.downImage,self.model.zhizhuzpid]] placeholderImage:[UIImage imageNamed:@"upload"]];
            }else if (indexPath.row == 4){
                [cellThr.detailsIv sd_setImageWithURL:[NSURL URLWithString:[NSString stringWithFormat:@"%@?type=s&id=%@",BS_Url.downImage,self.model.dikuaizpid]] placeholderImage:[UIImage imageNamed:@"upload"]];
            }
            return cellThr;
        }
   } else if ([typeStr isEqualToString:@"4"]) {
      MyTaskDetailsFootCell *cellFou = [self.tabV dequeueReusableCellWithIdentifier:@"MyTaskDetailsFootCell" forIndexPath:indexPath];
       return cellFou;
   } else if ([typeStr isEqualToString:@"5"]) {
       if (self.type == 0) {
           MyTaskDetailsFivCell *cellFiv = [self.tabV dequeueReusableCellWithIdentifier:@"MyTaskDetailsFivCell" forIndexPath:indexPath];
           cellFiv.finishBlock = ^(NSString * _Nonnull text) {
               [[self.dataArr objectAtIndex:indexPath.row] setObject:[self isNoBlankText:text] forKey:@"text"];
           };
           
           return cellFiv;
       }else{
           MyTaskDetailsFivCell *cellFiv = [self.tabV dequeueReusableCellWithIdentifier:@"MyTaskDetailsFivCell" forIndexPath:indexPath];
           cellFiv.detailTv.text = self.model.remarks;
           cellFiv.hintLb.hidden = YES;
           
           return cellFiv;
       }
       
   }
    return nil;
}

/**
 ÁÇπÂáªcell
 */
- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {
    
}

/** Ê∑ªÂä†ÁÖßÁâáÊàñÂà†Èô§ */
- (void)TMDSSelectCellIndex:(NSInteger)row {
    UIAlertController *sltAc = [UIAlertController alertControllerWithTitle:nil message:nil preferredStyle:UIAlertControllerStyleActionSheet];
    [sltAc addAction:[UIAlertAction actionWithTitle:@"Êü•ÁúãÈôÑ‰ª∂" style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
        CarTaskManagePhotoDetailsController *ctmpdc = [CarTaskManagePhotoDetailsController new];
        ctmpdc.isModification = NO;
        ctmpdc.cellInd = 0;
        ctmpdc.delegate = self;
        if (row==2) {
            [ctmpdc.photosDetailsArr addObject:self.yeziImg];
        } else if (row==3) {
            [ctmpdc.photosDetailsArr addObject:self.zhizhuImg];
        } else if (row==4) {
            [ctmpdc.photosDetailsArr addObject:self.dikuaiImg];
        }
        [self.navigationController pushViewController:ctmpdc animated:YES];
    }]];
    [sltAc addAction:[UIAlertAction actionWithTitle:@"Âà†Èô§ÈôÑ‰ª∂" style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
        [self photosDetailsWithDelete:row];
    }]];
    [sltAc addAction:[UIAlertAction actionWithTitle:@"ÂèñÊ∂à" style:UIAlertActionStyleCancel handler:nil]];
    [self presentViewController:sltAc animated:YES completion:nil];
}


/**
 Âà§Êñ≠ÈùûÁ©∫
 */
- (BOOL)isBlankString:(NSString *)aStr {
    if (!aStr) {
        return YES;
    }
    if ([aStr isKindOfClass:[NSNull class]]) {
        return YES;
    }
    if (!aStr.length) {
        return YES;
    }
    NSCharacterSet *set = [NSCharacterSet whitespaceAndNewlineCharacterSet];
    NSString *trimmedStr = [aStr stringByTrimmingCharactersInSet:set];
    if (!trimmedStr.length) {
        return YES;
    }
    return NO;
}

/**
 Âà§Êñ≠Â≠óÁ¨¶‰∏≤ÊòØÂê¶‰∏∫Á©∫,Á©∫ËøîÂõû@""

 @return Á©∫ @""  ‰∏ç‰∏∫Á©∫ text
 */
- (NSString *)isNoBlankText:(NSString *)text {
    if ([self isBlankString:text]) {
        return @"";
    }
    return text;
}

#pragma mark - ÂÆö‰Ωç

/**
 ÂÆö‰ΩçÊùÉÈôê
 */
- (void)HPSILocationJurisdiction {
    self.clManager = [[CLLocationManager alloc] init];
    [self.clManager requestAlwaysAuthorization];//‰∏ÄÁõ¥Ëé∑ÂèñÂÆö‰Ωç‰ø°ÊÅØ
    [self.clManager requestWhenInUseAuthorization];//‰ΩøÁî®ÁöÑÊó∂ÂÄôËé∑ÂèñÂÆö‰Ωç‰ø°ÊÅØ
    self.clManager.delegate = self;
    if ([CLLocationManager locationServicesEnabled]) {
        CLAuthorizationStatus locationStatus = [CLLocationManager authorizationStatus];
        if (locationStatus==kCLAuthorizationStatusNotDetermined) {
            /** Ê≤°ÊúâÈÄâÊã© */
            MLog(@"Ê≤°ÊúâÈÄâÊã©");
            
        } else if ((locationStatus==kCLAuthorizationStatusRestricted)||(locationStatus==kCLAuthorizationStatusDenied)) {
            /** ÈôêÂà∂&ÊãíÁªù */
            MLog(@"ÊãíÁªù");
            self.clAc = [UIAlertController alertControllerWithTitle:@"ËØ∑ÂÖÅËÆ∏ÂÆö‰ΩçÊúçÂä°" message:@"ÂéªÊâãÊú∫Á≥ªÁªü\"ËÆæÁΩÆ-ÈöêÁßÅ-ÂÆö‰ΩçÊúçÂä°\"ÂºÄÂêØ‰∏Ä‰∏ãÂêß" preferredStyle:UIAlertControllerStyleAlert];
            [self.clAc addAction:[UIAlertAction actionWithTitle:@"Áü•ÈÅì‰∫Ü" style:UIAlertActionStyleCancel handler:^(UIAlertAction * _Nonnull action) {
                [self.navigationController popViewControllerAnimated:YES];
            }]];
            [self presentViewController:self.clAc animated:YES completion:nil];
            
        } else if ((locationStatus==kCLAuthorizationStatusAuthorizedAlways)||(locationStatus==kCLAuthorizationStatusAuthorizedWhenInUse)) {
            /** ÂßãÁªàÂÖÅËÆ∏&‰ªÖÂú®‰ΩøÁî®ÊúüÈó¥ */
            MLog(@"ÊéàÊùÉ");
            [self isHomeGetMyLocation];
        }
    } else {
        [MViewToast MShowWithText:@"ÊöÇ‰∏çÊîØÊåÅÂÆö‰Ωç"];
        
    }
    
    
}

- (void)locationManager:(CLLocationManager *)manager didChangeAuthorizationStatus:(CLAuthorizationStatus)status {
    if (status==kCLAuthorizationStatusNotDetermined) {
        /** Ê≤°ÊúâÈÄâÊã© */
        MLog(@"======Ê≤°ÊúâÈÄâÊã©");
        
    } else if ((status==kCLAuthorizationStatusRestricted)||(status==kCLAuthorizationStatusDenied)) {
        /** ÈôêÂà∂&ÊãíÁªù */
        MLog(@"========ÊãíÁªù");
        self.clAc = [UIAlertController alertControllerWithTitle:@"ËØ∑ÂÖÅËÆ∏ÂÆö‰ΩçÊúçÂä°" message:@"ÂéªÊâãÊú∫Á≥ªÁªü\"ËÆæÁΩÆ-ÈöêÁßÅ-ÂÆö‰ΩçÊúçÂä°\"ÂºÄÂêØ‰∏Ä‰∏ãÂêß" preferredStyle:UIAlertControllerStyleAlert];
        [self.clAc addAction:[UIAlertAction actionWithTitle:@"Áü•ÈÅì‰∫Ü" style:UIAlertActionStyleCancel handler:^(UIAlertAction * _Nonnull action) {
            [self.navigationController popViewControllerAnimated:YES];
        }]];
        [self presentViewController:self.clAc animated:YES completion:nil];
    } else if ((status==kCLAuthorizationStatusAuthorizedAlways)||(status==kCLAuthorizationStatusAuthorizedWhenInUse)) {
        /** ÂßãÁªàÂÖÅËÆ∏&‰ªÖÂú®‰ΩøÁî®ÊúüÈó¥ */
        MLog(@"=========ÊéàÊùÉ");
        [self isHomeGetMyLocation];
    }
    
}


/**
 Ëé∑ÂèñÂÆö‰Ωç
 */
- (void)isHomeGetMyLocation {
    
    self.locationManager = [[TencentLBSLocationManager alloc] init];
    [self.locationManager setDelegate:self];
    [self.locationManager setApiKey:@"F7ABZ-EKRWW-MEGR4-RIYHI-GQHIH-7CFHU"];
    [self.locationManager setPausesLocationUpdatesAutomatically:NO];
    // Â¶ÇÊûúÈúÄË¶ÅPOI‰ø°ÊÅØÁöÑËØùÔºåÊ†πÊçÆÊâÄÈúÄË¶ÅÁöÑÁ∫ßÂà´Êù•ËÆæÂÆöÔºåÂÆö‰ΩçÁªìÊûúÂ∞Ü‰ºöÊ†πÊçÆËÆæÂÆöÁöÑPOIÁ∫ßÂà´Êù•ËøîÂõûÔºåÂ¶ÇÔºö
    [self.locationManager setRequestLevel:TencentLBSRequestLevelPoi];
//    [self.locationManager requestLocationWithCompletionBlock:^(TencentLBSLocation *location, NSError *error) {
//
//        if (error) {
//            MLog(@"ÂÆö‰ΩçÂºÇÂ∏∏\nlocError:{%ld - %@};", (long)error.code, error.localizedDescription);
//            return;
//        }
//
//        self.provinceStr = location.province;
//        self.cityStr = location.city;
//        self.districtStr = location.district;
////        self.nowClCoor2d = CLLocationCoordinate2DMake(location.latitude, location.location);
//        MLog(@"%@, %@, %@", location.location, location.name, location.address);
//
//
//
//    }];
    [self startSerialLocation];
    
}

// ËøûÁª≠ÂÆö‰Ωç
- (void)startSerialLocation {
    //ÂºÄÂßãÂÆö‰Ωç
    [self.locationManager startUpdatingLocation];
}
 
- (void)stopSerialLocation {
    //ÂÅúÊ≠¢ÂÆö‰Ωç
    [self.locationManager stopUpdatingLocation];
}

/**
 *  ÂÆö‰ΩçÊúùÂêëÊîπÂèòÊó∂ÂõûË∞ÉÂáΩÊï∞
 *
 *  @param manager ÂÆö‰Ωç TencentLBSLocationManager Á±ª
 *  @param newHeading  Êñ∞ÁöÑÂÆö‰ΩçÊúùÂêë
 */
- (void)tencentLBSLocationManager:(TencentLBSLocationManager *)manager didUpdateHeading:(CLHeading *)newHeading {
    self.chaoxiang = [NSString stringWithFormat:@"%@",newHeading];
}

- (void)tencentLBSLocationManager:(TencentLBSLocationManager *)manager
                didUpdateLocation:(TencentLBSLocation *)location {
    //ÂÆö‰ΩçÁªìÊûú
    self.provinceStr = location.province;
    self.cityStr = location.city;
    self.districtStr = location.district;
    TencentLBSPoi *tlbs = location.poiList.firstObject;
    self.nowClCoor2d = CLLocationCoordinate2DMake(tlbs.latitude, tlbs.longitude);
}

/**
 *  ÂΩìÂÆö‰ΩçÂèëÁîüÈîôËØØÊó∂Ôºå‰ºöË∞ÉÁî®‰ª£ÁêÜÁöÑÊ≠§ÊñπÊ≥ï
 *
 *  @param manager ÂÆö‰Ωç TencentLBSLocationManager Á±ª
 *  @param error ËøîÂõûÁöÑÈîôËØØÔºåÂèÇËÄÉ TencentLBSLocationError
 */
- (void)tencentLBSLocationManager:(TencentLBSLocationManager *)manager didFailWithError:(NSError *)error {
    
    return;
}

/**
 Áõ∏Êú∫ÊùÉÈôê
 */
- (void)HPSICameraJurisdiction {
    
    if ([UIImagePickerController isSourceTypeAvailable: UIImagePickerControllerSourceTypeCamera]){
        
        AVAuthorizationStatus authstatus = [AVCaptureDevice authorizationStatusForMediaType:AVMediaTypeVideo];
        if (authstatus == AVAuthorizationStatusNotDetermined) {
            /** Êú™Á°ÆÂÆö */
            [AVCaptureDevice requestAccessForMediaType:AVMediaTypeVideo completionHandler:^(BOOL granted) {//Áõ∏Êú∫ÊùÉÈôê
                dispatch_async(dispatch_get_main_queue(), ^{
                    if (granted) {
                        MLog(@"Áõ∏Êú∫ÊéàÊùÉ");
                            /** ÊãçÁÖß */
                        [self HPSICreateCamera];
                        
                    }else{

                        [MViewToast MShowWithText:@"Êú™ÂºÄÂêØÁõ∏Êú∫ÊùÉÈôê,Êó†Ê≥ïÊèê‰æõÊãçÁÖßÂäüËÉΩ"];
                        
                    }
                });
              
            }];
            
        } else if (authstatus == AVAuthorizationStatusDenied || authstatus == AVAuthorizationStatusRestricted) {
            /** ÊãíÁªù */
            UIAlertController *cameraAc = [UIAlertController alertControllerWithTitle:@"ËØ∑ÂÖÅËÆ∏ËÆøÈóÆÁõ∏Êú∫" message:@"ÂéªÊâãÊú∫Á≥ªÁªü\"ËÆæÁΩÆ-ÈöêÁßÅ-Áõ∏Êú∫\"ÂºÄÂêØ‰∏Ä‰∏ãÂêß" preferredStyle:UIAlertControllerStyleAlert];
            [cameraAc addAction:[UIAlertAction actionWithTitle:@"Áü•ÈÅì‰∫Ü" style:UIAlertActionStyleCancel handler:nil]];
            [self presentViewController:cameraAc animated:YES completion:nil];
        } else if (authstatus == AVAuthorizationStatusAuthorized) {
            /** ÊéàÊùÉ */
                /** ÊãçÁÖß */
            [self HPSICreateCamera];
            
            
        }
        
    } else {
        
        UIAlertController *cameraAc = [UIAlertController alertControllerWithTitle:@"ÂΩìÂâçËÆæÂ§á‰∏çÊîØÊåÅÁõ∏Êú∫" message:nil preferredStyle:UIAlertControllerStyleAlert];
        [cameraAc addAction:[UIAlertAction actionWithTitle:@"Áü•ÈÅì‰∫Ü" style:UIAlertActionStyleCancel handler:nil]];
        [self presentViewController:cameraAc animated:YES completion:nil];
    }
    
}

/**
 ÊãçÁÖß
 */
- (void)HPSICreateCamera {
    UIImagePickerController * picker = [[UIImagePickerController alloc] init];
    picker.delegate = self;
//    picker.allowsEditing = YES;
    picker.sourceType = UIImagePickerControllerSourceTypeCamera;
//    [picker.navigationBar setBarTintColor:[UIColor colorWithRed:228/255.0 green:228/255.0 blue:228/255.0 alpha:1]];
//    [picker.navigationBar setTranslucent:NO];
//    picker.navigationBar.tintColor = [UIColor whiteColor];
//    [picker.navigationBar setTitleTextAttributes: [NSDictionary dictionaryWithObjectsAndKeys:[UIColor whiteColor], NSForegroundColorAttributeName, [UIFont boldSystemFontOfSize:17], NSFontAttributeName, nil]];
    [self presentViewController:picker animated:YES completion:nil];
}

/**
 ÁºñËæëÊàêÂäü‰πãÂêé
 */
- (void)imagePickerController:(UIImagePickerController *)picker didFinishPickingMediaWithInfo:(NSDictionary<UIImagePickerControllerInfoKey, id> *)info {
//    // Ëé∑ÂèñÂéüÂßãÂõæÁâá
    UIImage * originalImage = [info objectForKey:UIImagePickerControllerOriginalImage];
//    // Ëé∑ÂèñÁºñËæëÂõæÁâá
//    UIImage * editImage = [info objectForKey:UIImagePickerControllerEditedImage];
//
//    NSData *imgData = UIImageJPEGRepresentation(editImage, 0.2f);
//    [self HPSISaveImageToPhotoAlbum:editImage];
//    self.signInIv.image = editImage;
//
//    self.siModel.imgData = imgData;
    if (self.imgSelect==2) {
        self.yeziImg = originalImage;
        NSData *imgData = UIImageJPEGRepresentation(originalImage, 0.2f);
        NSDictionary *dic = @{@"code_id":self.GUID,@"column":@"yepian",@"isreplace":@"1",@"filePath":imgData};
        [self loadImageWithDic:dic];
        
    } else if (self.imgSelect==3) {
        self.zhizhuImg = originalImage;
        NSData *imgData = UIImageJPEGRepresentation(originalImage, 0.2f);
        NSDictionary *dic = @{@"code_id":self.GUID,@"column":@"zhizhu",@"isreplace":@"1",@"filePath":imgData};
        [self loadImageWithDic:dic];
    } else if (self.imgSelect==4) {
        self.dikuaiImg = originalImage;
        NSData *imgData = UIImageJPEGRepresentation(originalImage, 0.2f);
        NSDictionary *dic = @{@"code_id":self.GUID,@"column":@"dikuai",@"isreplace":@"1",@"filePath":imgData};
        [self loadImageWithDic:dic];
    }
    [self.tabV reloadData];
    // Â∞ÜÊ®°ÊÄÅÊòæÁ§∫ÁöÑËßÜÂõæÊéßÂà∂Âô®Ê∂àÂ§±
    [picker dismissViewControllerAnimated:YES completion:nil];
    
    
}

//‰∏ä‰º†ÂõæÁâá
-(void)loadImageWithDic:(NSDictionary *)dic{
    [LSNetworkService postUpLoadImageWithDic:dic response:^(id dict, BSError *error) {
        if (dict != nil) {
            NSDictionary *dicc = [NSJSONSerialization JSONObjectWithData:dict options:NSJSONReadingMutableLeaves error:nil];
            NSLog(@"%@",dicc);
            if (dicc != nil) {
                if ([dic[@"column"] isEqualToString:@"yepian"]) {
                    self.yepianID = dicc[@"id"];
                    [LSNetworkService getZhiwuImageWithDic:@{@"fileid":dicc[@"id"]} response:^(id dict, BSError *error) {
                        if (dict != nil) {
                            NSDictionary *dic1 = [NSJSONSerialization JSONObjectWithData:dict options:NSJSONReadingMutableLeaves error:nil];
                            NSLog(@"%@",dic1);
                            if ([dic1[@"status"] integerValue] == 1) {
                                [[self.dataArr objectAtIndex:1] setObject:dic1[@"dataValue"][@"name"] forKey:@"text"];
                                [self.tabV reloadData];
                            }else{
                                [LPUnitily showToastWithText:dic1[@"message"]];
                            }
                        }
                    }];
                }else if ([dic[@"column"] isEqualToString:@"zhizhu"]){
                    self.zhizhuID = dicc[@"id"];
                }else if ([dic[@"column"] isEqualToString:@"dikuai"]){
                    self.dikuaiID = dicc[@"id"];
                }
            }else{
                [LPUnitily showToastWithText:dicc[@"message"]];
            }
        }
    }];
}


/**
 ÂèñÊ∂àÊãçÁÖß
 */
- (void)imagePickerControllerDidCancel:(UIImagePickerController *)picker {
    [picker dismissViewControllerAnimated:YES completion:nil];
}


/// Ê†°È™åÊèê‰∫§ÂèÇÊï∞
- (BOOL)TMDSVerifyBody {
    if ([[[self.dataArr objectAtIndex:1] objectForKey:@"text"] length]==0) {
        [MViewToast MShowWithText:@"ËØ∑Â°´ÂÜô‰ΩúÁâ©ÂêçÁß∞"];
        return NO;
    }
    if (self.yeziImg==nil) {
        [MViewToast MShowWithText:@"ËØ∑Ê∑ªÂä†Âè∂Â≠êÁÖßÁâá"];
        return NO;
    }
    if (self.zhizhuImg==nil) {
        [MViewToast MShowWithText:@"ËØ∑Ê∑ªÂä†Ê§çÊ†™ÁÖßÁâá"];
        return NO;
    }
    if (self.dikuaiImg==nil) {
        [MViewToast MShowWithText:@"ËØ∑Ê∑ªÂä†Âú∞ÂùóÁÖßÁâá"];
        return NO;
    }
    return YES;
}


/// ‰øùÂ≠ò
- (void)TMDSSubmitRequest {
    
    NSDictionary *bodyDic;
    if (self.type == 0) {
        bodyDic = @{@"zuowumc":[[self.dataArr objectAtIndex:1] objectForKey:@"text"],
                    @"remarks":[[self.dataArr objectAtIndex:5] objectForKey:@"text"],
                    @"filecode":self.GUID,
                    @"weidu1":@(self.nowClCoor2d.latitude),
                    @"jingdu1":@(self.nowClCoor2d.longitude),
                    @"weidu":@(self.nowClCoor2d.latitude),
                    @"jingdu":@(self.nowClCoor2d.longitude),
                    @"weidu2":@(self.nowClCoor2d.latitude),
                    @"jingdu2":@(self.nowClCoor2d.longitude),
                    @"province":self.provinceStr != nil ? self.provinceStr : @"",
                    @"city":self.cityStr != nil ? self.cityStr : @"",
                    @"district":self.districtStr != nil ? self.districtStr : @"",
                    @"chaoxiang":self.chaoxiang != nil ? self.chaoxiang : @"",
                    @"jingduzhi":@"",
                    @"zhuangtai":@"5"
        };
    }else{
        bodyDic = @{@"zuowumc":[[self.dataArr objectAtIndex:1] objectForKey:@"text"],
                    @"remarks":[[self.dataArr objectAtIndex:5] objectForKey:@"text"],
                    @"filecode":self.GUID,
                    @"weidu1":@(self.nowClCoor2d.latitude),
                    @"jingdu1":@(self.nowClCoor2d.longitude),
                    @"weidu":@(self.nowClCoor2d.latitude),
                    @"jingdu":@(self.nowClCoor2d.longitude),
                    @"weidu2":@(self.nowClCoor2d.latitude),
                    @"jingdu2":@(self.nowClCoor2d.longitude),
                    @"province":self.provinceStr != nil ? self.provinceStr : @"",
                    @"city":self.cityStr != nil ? self.cityStr : @"",
                    @"district":self.districtStr != nil ? self.districtStr : @"",
                    @"chaoxiang":self.chaoxiang != nil ? self.chaoxiang : @"",
                    @"jingduzhi":@"",
                    @"zhuangtai":@"5",
                    @"id":self.model.ID
        };
    }
    
    
    
    [LSNetworkService getDataCollectionSaveWithString:bodyDic response:^(id dict, BSError *error) {
        if (dict != nil) {
            NSDictionary *dic = dict;
            if ([dic[@"status"] integerValue] == 1) {
                
                UIAlertController *cameraAc = [UIAlertController alertControllerWithTitle:nil message:@"‰øùÂ≠òÊàêÂäü" preferredStyle:UIAlertControllerStyleAlert];
                [cameraAc addAction:[UIAlertAction actionWithTitle:@"Áü•ÈÅì‰∫Ü" style:UIAlertActionStyleCancel handler:^(UIAlertAction * _Nonnull action) {
                    self.tabBarController.tabBar.hidden = NO;
                    [self.navigationController popViewControllerAnimated:YES];
                }]];
                [self presentViewController:cameraAc animated:YES completion:nil];
                
            }else{
                [LPUnitily showToastWithText:dic[@"message"]];
            }
        }
    }];
    
}

/**
 Âà†Èô§ÁÖßÁâá
 */
- (void)photosDetailsWithDelete:(NSInteger)arrInd {
    if (self.imgSelect==2) {
        self.yeziImg=nil;
    } else if (self.imgSelect==3) {
        self.zhizhuImg=nil;
    } else if (self.imgSelect==4) {
        self.dikuaiImg=nil;
    }
    [self.tabV reloadData];
}


- (NSString *)getUniqueStrByUUID
{
    CFUUIDRef    uuidObj = CFUUIDCreate(nil);//create a new UUID

    //get the string representation of the UUID

    NSString    *uuidString = (__bridge_transfer NSString *)CFUUIDCreateString(nil, uuidObj);

    CFRelease(uuidObj);

    return uuidString;

}


@end
